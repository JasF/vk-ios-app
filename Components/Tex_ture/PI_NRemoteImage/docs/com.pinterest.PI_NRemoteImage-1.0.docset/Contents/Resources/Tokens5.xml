<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/PINRemoteImageCategory.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/PINRemoteImageCategory</TokenIdentifier>
			<Abstract type="html">Protocol to implement on UIView subclasses to support PINRemoteImage</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
            
			
			<NodeRef refid="5"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setImageFromURL:</TokenIdentifier>
			<Abstract type="html">Set the image from the given URL.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setImageFromURL:(nullable NSURL *)url</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">NSURL to fetch from.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setImageFromURL:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setImageFromURL:placeholderImage:</TokenIdentifier>
			<Abstract type="html">Set the image from the given URL and set placeholder image while image at URL is being retrieved.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setImageFromURL:(nullable NSURL *)url placeholderImage:(nullable PINImage *)placeholderImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">NSURL to fetch from.</Abstract>
				</Parameter><Parameter>
					<Name>placeholderImage</Name>
					<Abstract type="html">PINImage to set on the view while the image at URL is being retrieved.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setImageFromURL:placeholderImage:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setImageFromURL:completion:</TokenIdentifier>
			<Abstract type="html">Set the image from the given URL and call completion when finished.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setImageFromURL:(nullable NSURL *)url completion:(nullable PINRemoteImageManagerImageCompletion)completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">NSURL to fetch from.</Abstract>
				</Parameter><Parameter>
					<Name>completion</Name>
					<Abstract type="html">Called when url has been retrieved and set on view.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setImageFromURL:completion:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setImageFromURL:placeholderImage:completion:</TokenIdentifier>
			<Abstract type="html">Set the image from the given URL, set placeholder while image at url is being retrieved and call completion when finished.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setImageFromURL:(nullable NSURL *)url placeholderImage:(nullable PINImage *)placeholderImage completion:(nullable PINRemoteImageManagerImageCompletion)completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">NSURL to fetch from.</Abstract>
				</Parameter><Parameter>
					<Name>placeholderImage</Name>
					<Abstract type="html">PINImage to set on the view while the image at URL is being retrieved.</Abstract>
				</Parameter><Parameter>
					<Name>completion</Name>
					<Abstract type="html">Called when url has been retrieved and set on view.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setImageFromURL:placeholderImage:completion:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setImageFromURL:processorKey:processor:</TokenIdentifier>
			<Abstract type="html">Retrieve the image from the given URL, process it using the passed in processor block and set result on view.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setImageFromURL:(nullable NSURL *)url processorKey:(nullable NSString *)processorKey processor:(nullable PINRemoteImageManagerImageProcessor)processor</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">NSURL to fetch from.</Abstract>
				</Parameter><Parameter>
					<Name>processorKey</Name>
					<Abstract type="html">NSString key to uniquely identify processor. Used in caching.</Abstract>
				</Parameter><Parameter>
					<Name>processor</Name>
					<Abstract type="html">PINRemoteImageManagerImageProcessor processor block which should return the processed image.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setImageFromURL:processorKey:processor:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setImageFromURL:placeholderImage:processorKey:processor:</TokenIdentifier>
			<Abstract type="html">Set placeholder on view and retrieve the image from the given URL, process it using the passed in processor block and set result on view.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setImageFromURL:(nullable NSURL *)url placeholderImage:(nullable PINImage *)placeholderImage processorKey:(nullable NSString *)processorKey processor:(nullable PINRemoteImageManagerImageProcessor)processor</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">NSURL to fetch from.</Abstract>
				</Parameter><Parameter>
					<Name>placeholderImage</Name>
					<Abstract type="html">PINImage to set on the view while the image at URL is being retrieved.</Abstract>
				</Parameter><Parameter>
					<Name>processorKey</Name>
					<Abstract type="html">NSString key to uniquely identify processor. Used in caching.</Abstract>
				</Parameter><Parameter>
					<Name>processor</Name>
					<Abstract type="html">PINRemoteImageManagerImageProcessor processor block which should return the processed image.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setImageFromURL:placeholderImage:processorKey:processor:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setImageFromURL:processorKey:processor:completion:</TokenIdentifier>
			<Abstract type="html">Retrieve the image from the given URL, process it using the passed in processor block and set result on view. Call completion after image has been fetched, processed and set on view.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setImageFromURL:(nullable NSURL *)url processorKey:(nullable NSString *)processorKey processor:(nullable PINRemoteImageManagerImageProcessor)processor completion:(nullable PINRemoteImageManagerImageCompletion)completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">NSURL to fetch from.</Abstract>
				</Parameter><Parameter>
					<Name>processorKey</Name>
					<Abstract type="html">NSString key to uniquely identify processor. Used in caching.</Abstract>
				</Parameter><Parameter>
					<Name>processor</Name>
					<Abstract type="html">PINRemoteImageManagerImageProcessor processor block which should return the processed image.</Abstract>
				</Parameter><Parameter>
					<Name>completion</Name>
					<Abstract type="html">Called when url has been retrieved and set on view.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setImageFromURL:processorKey:processor:completion:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setImageFromURL:placeholderImage:processorKey:processor:completion:</TokenIdentifier>
			<Abstract type="html">Set placeholder on view and retrieve the image from the given URL, process it using the passed in processor block and set result on view. Call completion after image has been fetched, processed and set on view.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setImageFromURL:(nullable NSURL *)url placeholderImage:(nullable PINImage *)placeholderImage processorKey:(nullable NSString *)processorKey processor:(nullable PINRemoteImageManagerImageProcessor)processor completion:(nullable PINRemoteImageManagerImageCompletion)completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">NSURL to fetch from.</Abstract>
				</Parameter><Parameter>
					<Name>placeholderImage</Name>
					<Abstract type="html">PINImage to set on the view while the image at URL is being retrieved.</Abstract>
				</Parameter><Parameter>
					<Name>processorKey</Name>
					<Abstract type="html">NSString key to uniquely identify processor. Used in caching.</Abstract>
				</Parameter><Parameter>
					<Name>processor</Name>
					<Abstract type="html">PINRemoteImageManagerImageProcessor processor block which should return the processed image.</Abstract>
				</Parameter><Parameter>
					<Name>completion</Name>
					<Abstract type="html">Called when url has been retrieved and set on view.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setImageFromURL:placeholderImage:processorKey:processor:completion:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setImageFromURLs:</TokenIdentifier>
			<Abstract type="html">Retrieve one of the images at the passed in URLs depending on previous network performance and set result on view.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setImageFromURLs:(nullable NSArray&lt;NSURL*&gt; *)urls</Declaration>
			<Parameters>
				<Parameter>
					<Name>urls</Name>
					<Abstract type="html">NSArray of NSURLs sorted in increasing quality</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setImageFromURLs:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setImageFromURLs:placeholderImage:</TokenIdentifier>
			<Abstract type="html">Set placeholder on view and retrieve one of the images at the passed in URLs depending on previous network performance and set result on view.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setImageFromURLs:(nullable NSArray&lt;NSURL*&gt; *)urls placeholderImage:(nullable PINImage *)placeholderImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>urls</Name>
					<Abstract type="html">NSArray of NSURLs sorted in increasing quality</Abstract>
				</Parameter><Parameter>
					<Name>placeholderImage</Name>
					<Abstract type="html">PINImage to set on the view while the image at URL is being retrieved.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setImageFromURLs:placeholderImage:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setImageFromURLs:placeholderImage:completion:</TokenIdentifier>
			<Abstract type="html">Set placeholder on view and retrieve one of the images at the passed in URLs depending on previous network performance and set result on view. Call completion after image has been fetched and set on view.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setImageFromURLs:(nullable NSArray&lt;NSURL*&gt; *)urls placeholderImage:(nullable PINImage *)placeholderImage completion:(nullable PINRemoteImageManagerImageCompletion)completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>urls</Name>
					<Abstract type="html">NSArray of NSURLs sorted in increasing quality</Abstract>
				</Parameter><Parameter>
					<Name>placeholderImage</Name>
					<Abstract type="html">PINImage to set on the view while the image at URL is being retrieved.</Abstract>
				</Parameter><Parameter>
					<Name>completion</Name>
					<Abstract type="html">Called when url has been retrieved and set on view.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setImageFromURLs:placeholderImage:completion:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_cancelImageDownload</TokenIdentifier>
			<Abstract type="html">Cancels the image download. Guarantees that previous setImage calls will not have their results set on the image view after calling this (as opposed to PINRemoteImageManager which does not guarantee cancellation).</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_cancelImageDownload</Declaration>
			
			
			<Anchor>//api/name/pin_cancelImageDownload</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_downloadImageOperationUUID</TokenIdentifier>
			<Abstract type="html">Returns the NSUUID associated with any PINRemoteImage task currently running on the view.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (nullable NSUUID *)pin_downloadImageOperationUUID</Declaration>
			
			<ReturnValue><Abstract type="html">NSUUID associated with any PINRemoteImage task currently running on the view.</Abstract></ReturnValue>
			<Anchor>//api/name/pin_downloadImageOperationUUID</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_setDownloadImageOperationUUID:</TokenIdentifier>
			<Abstract type="html">Set the current NSUUID associated with a PINRemoteImage task running on the view.</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>- (void)pin_setDownloadImageOperationUUID:(nullable NSUUID *)downloadImageOperationUUID</Declaration>
			<Parameters>
				<Parameter>
					<Name>downloadImageOperationUUID</Name>
					<Abstract type="html">NSUUID associated with a PINRemoteImage task.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pin_setDownloadImageOperationUUID:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/setPin_updateWithProgress:</TokenIdentifier>
			<Abstract type="html">Whether the view should update with progress images (such as those provided by progressive JPEG images).</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL pin_updateWithProgress</Declaration>
			
			<ReturnValue><Abstract type="html">BOOL value indicating whether the view should update with progress images</Abstract></ReturnValue>
			<Anchor>//api/name/pin_updateWithProgress</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PINRemoteImageCategory/pin_updateWithProgress</TokenIdentifier>
			<Abstract type="html">Whether the view should update with progress images (such as those provided by progressive JPEG images).</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL pin_updateWithProgress</Declaration>
			
			<ReturnValue><Abstract type="html">BOOL value indicating whether the view should update with progress images</Abstract></ReturnValue>
			<Anchor>//api/name/pin_updateWithProgress</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PINRemoteImageCategory/pin_updateWithProgress</TokenIdentifier>
			<Abstract type="html">Whether the view should update with progress images (such as those provided by progressive JPEG images).</Abstract>
			<DeclaredIn>PINRemoteImageCategoryManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL pin_updateWithProgress</Declaration>
			
			<ReturnValue><Abstract type="html">BOOL value indicating whether the view should update with progress images</Abstract></ReturnValue>
			<Anchor>//api/name/pin_updateWithProgress</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
        
        
	</File>
</Tokens>